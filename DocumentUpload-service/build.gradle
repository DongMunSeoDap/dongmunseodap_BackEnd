plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id "com.netflix.dgs.codegen" version "8.0.4"
}

group = 'com.be'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {

    // Dgs (GraphQL)
    implementation 'com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter:7.3.3'
    implementation(platform('com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:5.5.1'))
    implementation 'com.netflix.graphql.dgs:graphql-dgs-extended-scalars' // graphql 이랑 java 타입을 맞추기 위함

    // kafka
    implementation 'org.springframework.kafka:spring-kafka'

    // JSON 처리 (kafka 메세지 직렬화용)
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // 파일 처리
    implementation 'commons-io:commons-io:2.15.1'

    // validation (DTO 검증)
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Test
    testImplementation 'org.springframework.kafka:spring-kafka-test'
}

/*dgsCodegen {
    schemaPaths = ["${projectDir}/src/main/resources/schema"]
    packageName = "com.be"
    generateClient = false
}

sourceSets {
    main {
        java {
            srcDir "${buildDir}/generated/sources/dgs-codegen/main/java"
        }
    }
}*/


tasks.named('test') {
    useJUnitPlatform()
}

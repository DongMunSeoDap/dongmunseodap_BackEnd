plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.github.davidmc24.gradle.plugin.avro' version '1.2.0'
}

group = 'com.be'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion.set(JavaLanguageVersion.of(21))
	}
}
repositories {
	mavenCentral()
	// Kafka Avro serializer
	maven {
		url = 'https://packages.confluent.io/maven/' }
}


dependencies {
	// Spring Boot 기본 설정
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-logging'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Kafka Avro
	implementation 'io.confluent:kafka-avro-serializer:7.5.0'
	implementation 'org.apache.avro:avro:1.11.1'

	// 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// elasticSearch
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'

	// openai 및 pinecone(벡터DB)
	implementation 'org.springframework.ai:spring-ai-starter-model-openai'


	// — EmbeddingModel 구현체
	implementation "org.springframework.ai:spring-ai-starter-model-openai:1.0.0"

	// Spring WebFlux (만약 WebClient 직접 쓰실 경우)
	implementation 'org.springframework.boot:spring-boot-starter-webflux'


}
avro {
	createSetters = false
}
sourceSets {
	main {
		java {
			srcDirs = ['src/main/java']
		}
	}
}

springBoot {
	mainClass.set('com.be.documentsearchservice.DocumentSearchServiceApplication')
}


tasks.named('test') {
	useJUnitPlatform()
}
